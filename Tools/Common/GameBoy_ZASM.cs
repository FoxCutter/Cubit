using CommandList = System.Collections.Generic.SortedList<string, OpcodeData.CommandID>;

namespace OpcodeData
{
    public static partial class ZASM
    {
        public static OpcodeEntry[] GameBoyOpcodeList = new OpcodeEntry[]
        {
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x88, Name = CommandID.ADC , Function = FunctionID.ADD_C, Params = new ParamEntry[] { new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), new ParamEntry(ParameterID.RegisterAny, ParameterType.ByteRegister, EncodingType.Pos1, false), }, Type = OpcodeType.Official, Cycles = 4, Length = 1, }, // 88: ADC A, r
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x8E, Name = CommandID.ADC , Function = FunctionID.ADD_C, Params = new ParamEntry[] { new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), new ParamEntry(ParameterID.HL, ParameterType.WordRegisterPointer, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 1, }, // 8E: ADC A, (HL)
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xCE, Name = CommandID.ADC , Function = FunctionID.ADD_C, Params = new ParamEntry[] { new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), new ParamEntry(ParameterID.ImmediateByte, ParameterType.Value, EncodingType.ByteImmidate, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 2, }, // CEnn: ADC A, nn
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x09, Name = CommandID.ADD , Function = FunctionID.ADD, Params = new ParamEntry[] { new ParamEntry(ParameterID.HL, ParameterType.WordRegister, EncodingType.None, false), new ParamEntry(ParameterID.RegisterAny, ParameterType.WordRegister, EncodingType.Pos3, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 1, }, // 09: ADD HL, rr
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x80, Name = CommandID.ADD , Function = FunctionID.ADD, Params = new ParamEntry[] { new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), new ParamEntry(ParameterID.RegisterAny, ParameterType.ByteRegister, EncodingType.Pos1, false), }, Type = OpcodeType.Official, Cycles = 4, Length = 1, }, // 80: ADD A, r
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x86, Name = CommandID.ADD , Function = FunctionID.ADD, Params = new ParamEntry[] { new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), new ParamEntry(ParameterID.HL, ParameterType.WordRegisterPointer, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 1, }, // 86: ADD A, (HL)
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xC6, Name = CommandID.ADD , Function = FunctionID.ADD, Params = new ParamEntry[] { new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), new ParamEntry(ParameterID.ImmediateByte, ParameterType.Value, EncodingType.ByteImmidate, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 2, }, // C6nn: ADD A, nn
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xE8, Name = CommandID.ADD , Function = FunctionID.ADD, Params = new ParamEntry[] { new ParamEntry(ParameterID.SP, ParameterType.WordRegister, EncodingType.None, false), new ParamEntry(ParameterID.ImmediateByte, ParameterType.Value, EncodingType.ByteImmidate, false), }, Type = OpcodeType.Official, Cycles = 16, Length = 2, }, // E8nn: ADD SP, nn
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xA0, Name = CommandID.AND , Function = FunctionID.AND, Params = new ParamEntry[] { new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), new ParamEntry(ParameterID.RegisterAny, ParameterType.ByteRegister, EncodingType.Pos1, false), }, Type = OpcodeType.Official, Cycles = 4, Length = 1, }, // A0: AND A, r
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xA6, Name = CommandID.AND , Function = FunctionID.AND, Params = new ParamEntry[] { new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), new ParamEntry(ParameterID.HL, ParameterType.WordRegisterPointer, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 1, }, // A6: AND A, (HL)
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xE6, Name = CommandID.AND , Function = FunctionID.AND, Params = new ParamEntry[] { new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), new ParamEntry(ParameterID.ImmediateByte, ParameterType.Value, EncodingType.ByteImmidate, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 2, }, // E6nn: AND A, nn
            new OpcodeEntry { Index = false, Prefix = 0xCB, Encoding = 0x40, Name = CommandID.BIT , Function = FunctionID.BIT, Params = new ParamEntry[] { new ParamEntry(ParameterID.EncodedByte, ParameterType.Value, EncodingType.Pos2, false), new ParamEntry(ParameterID.RegisterAny, ParameterType.ByteRegister, EncodingType.Pos1, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 2, }, // CB40: BIT e, r
            new OpcodeEntry { Index = false, Prefix = 0xCB, Encoding = 0x46, Name = CommandID.BIT , Function = FunctionID.BIT, Params = new ParamEntry[] { new ParamEntry(ParameterID.EncodedByte, ParameterType.Value, EncodingType.Pos2, false), new ParamEntry(ParameterID.HL, ParameterType.WordRegisterPointer, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 16, Length = 2, }, // CB46: BIT e, (HL)
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xC4, Name = CommandID.CALL, Function = FunctionID.CALL, Params = new ParamEntry[] { new ParamEntry(ParameterID.FlagsAny, ParameterType.HalfFlag, EncodingType.Pos2, false), new ParamEntry(ParameterID.ImmediateWord, ParameterType.Address, EncodingType.WordImmidate, false), }, Type = OpcodeType.Official, Cycles = 12, Length = 3, }, // C4nnnn: CALL ff, nnnn
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xCD, Name = CommandID.CALL, Function = FunctionID.CALL, Params = new ParamEntry[] { new ParamEntry(ParameterID.ImmediateWord, ParameterType.Address, EncodingType.WordImmidate, false), }, Type = OpcodeType.Official, Cycles = 24, Length = 3, }, // CDnnnn: CALL nnnn
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x3F, Name = CommandID.CCF , Function = FunctionID.CY_INVERT, Params = new ParamEntry[] { }, Type = OpcodeType.Official, Cycles = 4, Length = 1, }, // 3F: CCF
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xB8, Name = CommandID.CP  , Function = FunctionID.CMP, Params = new ParamEntry[] { new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), new ParamEntry(ParameterID.RegisterAny, ParameterType.ByteRegister, EncodingType.Pos1, false), }, Type = OpcodeType.Official, Cycles = 4, Length = 1, }, // B8: CP A, r
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xBE, Name = CommandID.CP  , Function = FunctionID.CMP, Params = new ParamEntry[] { new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), new ParamEntry(ParameterID.HL, ParameterType.WordRegisterPointer, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 1, }, // BE: CP A, (HL)
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xFE, Name = CommandID.CP  , Function = FunctionID.CMP, Params = new ParamEntry[] { new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), new ParamEntry(ParameterID.ImmediateByte, ParameterType.Value, EncodingType.ByteImmidate, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 2, }, // FEnn: CP A, nn
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x2F, Name = CommandID.CPL , Function = FunctionID.NOT, Params = new ParamEntry[] { new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 4, Length = 1, }, // 2F: CPL A
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x27, Name = CommandID.DAA , Function = FunctionID.BCD_ADJUST, Params = new ParamEntry[] { }, Type = OpcodeType.Official, Cycles = 4, Length = 1, }, // 27: DAA
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x05, Name = CommandID.DEC , Function = FunctionID.DEC, Params = new ParamEntry[] { new ParamEntry(ParameterID.RegisterAny, ParameterType.ByteRegister, EncodingType.Pos2, false), }, Type = OpcodeType.Official, Cycles = 4, Length = 1, }, // 05: DEC r
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x0B, Name = CommandID.DEC , Function = FunctionID.DEC, Params = new ParamEntry[] { new ParamEntry(ParameterID.RegisterAny, ParameterType.WordRegister, EncodingType.Pos3, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 1, }, // 0B: DEC rr
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x35, Name = CommandID.DEC , Function = FunctionID.DEC, Params = new ParamEntry[] { new ParamEntry(ParameterID.HL, ParameterType.WordRegisterPointer, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 12, Length = 1, }, // 35: DEC (HL)
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xF3, Name = CommandID.DI  , Function = FunctionID.DI, Params = new ParamEntry[] { }, Type = OpcodeType.Official, Cycles = 4, Length = 1, }, // F3: DI
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xFB, Name = CommandID.EI  , Function = FunctionID.EI, Params = new ParamEntry[] { }, Type = OpcodeType.Official, Cycles = 4, Length = 1, }, // FB: EI
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x76, Name = CommandID.HALT, Function = FunctionID.HALT, Params = new ParamEntry[] { }, Type = OpcodeType.Official, Cycles = 4, Length = 1, }, // 76: HALT
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x03, Name = CommandID.INC , Function = FunctionID.INC, Params = new ParamEntry[] { new ParamEntry(ParameterID.RegisterAny, ParameterType.WordRegister, EncodingType.Pos3, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 1, }, // 03: INC rr
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x04, Name = CommandID.INC , Function = FunctionID.INC, Params = new ParamEntry[] { new ParamEntry(ParameterID.RegisterAny, ParameterType.ByteRegister, EncodingType.Pos2, false), }, Type = OpcodeType.Official, Cycles = 4, Length = 1, }, // 04: INC r
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x34, Name = CommandID.INC , Function = FunctionID.INC, Params = new ParamEntry[] { new ParamEntry(ParameterID.HL, ParameterType.WordRegisterPointer, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 12, Length = 1, }, // 34: INC (HL)
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xC2, Name = CommandID.JP  , Function = FunctionID.JMP, Params = new ParamEntry[] { new ParamEntry(ParameterID.FlagsAny, ParameterType.HalfFlag, EncodingType.Pos2, false), new ParamEntry(ParameterID.ImmediateWord, ParameterType.Address, EncodingType.WordImmidate, false), }, Type = OpcodeType.Official, Cycles = 16, Length = 3, }, // C2nnnn: JP ff, nnnn
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xC3, Name = CommandID.JP  , Function = FunctionID.JMP, Params = new ParamEntry[] { new ParamEntry(ParameterID.ImmediateWord, ParameterType.Address, EncodingType.WordImmidate, false), }, Type = OpcodeType.Official, Cycles = 16, Length = 3, }, // C3nnnn: JP nnnn
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xE9, Name = CommandID.JP  , Function = FunctionID.JMP, Params = new ParamEntry[] { new ParamEntry(ParameterID.HL, ParameterType.WordRegister, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 4, Length = 1, }, // E9: JP HL
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x18, Name = CommandID.JR  , Function = FunctionID.JR, Params = new ParamEntry[] { new ParamEntry(ParameterID.ImmediateByte, ParameterType.Displacment, EncodingType.ByteImmidate, false), }, Type = OpcodeType.Official, Cycles = 12, Length = 2, }, // 18nn: JR e-2
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x20, Name = CommandID.JR  , Function = FunctionID.JR, Params = new ParamEntry[] { new ParamEntry(ParameterID.FlagsAny, ParameterType.HalfFlag, EncodingType.Pos4, false), new ParamEntry(ParameterID.ImmediateByte, ParameterType.Displacment, EncodingType.ByteImmidate, false), }, Type = OpcodeType.Official, Cycles = 12, Length = 2, }, // 20nn: JR ff, e-2
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x01, Name = CommandID.LD  , Function = FunctionID.LD, Params = new ParamEntry[] { new ParamEntry(ParameterID.RegisterAny, ParameterType.WordRegister, EncodingType.Pos3, false), new ParamEntry(ParameterID.ImmediateWord, ParameterType.Value, EncodingType.WordImmidate, false), }, Type = OpcodeType.Official, Cycles = 12, Length = 3, }, // 01nnnn: LD rr, nnnn
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x02, Name = CommandID.LD  , Function = FunctionID.LD, Params = new ParamEntry[] { new ParamEntry(ParameterID.BC, ParameterType.WordRegisterPointer, EncodingType.None, false), new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 1, }, // 02: LD (BC), A
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x06, Name = CommandID.LD  , Function = FunctionID.LD, Params = new ParamEntry[] { new ParamEntry(ParameterID.RegisterAny, ParameterType.ByteRegister, EncodingType.Pos2, false), new ParamEntry(ParameterID.ImmediateByte, ParameterType.Value, EncodingType.ByteImmidate, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 2, }, // 06nn: LD r, nn
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x08, Name = CommandID.LD  , Function = FunctionID.LD, Params = new ParamEntry[] { new ParamEntry(ParameterID.ImmediateWord, ParameterType.AddressPointer, EncodingType.WordImmidate, false), new ParamEntry(ParameterID.SP, ParameterType.WordRegister, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 20, Length = 3, }, // 08nnnn: LD (nnnn), SP
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x0A, Name = CommandID.LD  , Function = FunctionID.LD, Params = new ParamEntry[] { new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), new ParamEntry(ParameterID.BC, ParameterType.WordRegisterPointer, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 1, }, // 0A: LD A, (BC)
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x12, Name = CommandID.LD  , Function = FunctionID.LD, Params = new ParamEntry[] { new ParamEntry(ParameterID.DE, ParameterType.WordRegisterPointer, EncodingType.None, false), new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 1, }, // 12: LD (DE), A
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x1A, Name = CommandID.LD  , Function = FunctionID.LD, Params = new ParamEntry[] { new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), new ParamEntry(ParameterID.DE, ParameterType.WordRegisterPointer, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 1, }, // 1A: LD A, (DE)
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x22, Name = CommandID.LD  , Function = FunctionID.LD_INC, Params = new ParamEntry[] { new ParamEntry(ParameterID.HLI, ParameterType.WordRegisterPointer, EncodingType.None, false), new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 1, }, // 22: LD (HLI), A
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x2A, Name = CommandID.LD  , Function = FunctionID.LD_INC, Params = new ParamEntry[] { new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), new ParamEntry(ParameterID.HLI, ParameterType.WordRegisterPointer, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 1, }, // 2A: LD A, (HLI)
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x32, Name = CommandID.LD  , Function = FunctionID.LD_DEC, Params = new ParamEntry[] { new ParamEntry(ParameterID.HLD, ParameterType.WordRegisterPointer, EncodingType.None, false), new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 1, }, // 32: LD (HLD), A
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x36, Name = CommandID.LD  , Function = FunctionID.LD, Params = new ParamEntry[] { new ParamEntry(ParameterID.HL, ParameterType.WordRegisterPointer, EncodingType.None, false), new ParamEntry(ParameterID.ImmediateByte, ParameterType.Value, EncodingType.ByteImmidate, false), }, Type = OpcodeType.Official, Cycles = 12, Length = 2, }, // 36nn: LD (HL), nn
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x3A, Name = CommandID.LD  , Function = FunctionID.LD_DEC, Params = new ParamEntry[] { new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), new ParamEntry(ParameterID.HLD, ParameterType.WordRegisterPointer, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 1, }, // 3A: LD A, (HLD)
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x40, Name = CommandID.LD  , Function = FunctionID.LD, Params = new ParamEntry[] { new ParamEntry(ParameterID.RegisterAny, ParameterType.ByteRegister, EncodingType.Pos2, false), new ParamEntry(ParameterID.RegisterAny, ParameterType.ByteRegister, EncodingType.Pos1, false), }, Type = OpcodeType.Official, Cycles = 4, Length = 1, }, // 40: LD r, r
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x46, Name = CommandID.LD  , Function = FunctionID.LD, Params = new ParamEntry[] { new ParamEntry(ParameterID.RegisterAny, ParameterType.ByteRegister, EncodingType.Pos2, false), new ParamEntry(ParameterID.HL, ParameterType.WordRegisterPointer, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 1, }, // 46: LD r, (HL)
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x70, Name = CommandID.LD  , Function = FunctionID.LD, Params = new ParamEntry[] { new ParamEntry(ParameterID.HL, ParameterType.WordRegisterPointer, EncodingType.None, false), new ParamEntry(ParameterID.RegisterAny, ParameterType.ByteRegister, EncodingType.Pos1, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 1, }, // 70: LD (HL), r
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xE0, Name = CommandID.LD  , Function = FunctionID.LD_HIGH, Params = new ParamEntry[] { new ParamEntry(ParameterID.ImmediateByte, ParameterType.HighMemPointerPlus, EncodingType.ByteImmidate, false), new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 12, Length = 2, }, // E0nn: LD ($ff00 + nn), A
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xE2, Name = CommandID.LD  , Function = FunctionID.LD_HIGH, Params = new ParamEntry[] { new ParamEntry(ParameterID.C, ParameterType.HighMemPointerPlus, EncodingType.None, false), new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 1, }, // E2: LD ($ff00 + C), A
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xE2, Name = CommandID.LD  , Function = FunctionID.LD_HIGH, Params = new ParamEntry[] { new ParamEntry(ParameterID.C, ParameterType.HighMemPointer, EncodingType.None, false), new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 1, }, // E2: LD C, A
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xEA, Name = CommandID.LD  , Function = FunctionID.LD, Params = new ParamEntry[] { new ParamEntry(ParameterID.ImmediateWord, ParameterType.AddressPointer, EncodingType.WordImmidate, false), new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 16, Length = 3, }, // EAnnnn: LD (nnnn), A
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xF0, Name = CommandID.LD  , Function = FunctionID.LD_HIGH, Params = new ParamEntry[] { new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), new ParamEntry(ParameterID.ImmediateByte, ParameterType.HighMemPointerPlus, EncodingType.ByteImmidate, false), }, Type = OpcodeType.Official, Cycles = 12, Length = 2, }, // F0nn: LD A, ($ff00 + nn)
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xF2, Name = CommandID.LD  , Function = FunctionID.LD_HIGH, Params = new ParamEntry[] { new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), new ParamEntry(ParameterID.C, ParameterType.HighMemPointerPlus, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 1, }, // F2: LD A, ($ff00 + C)
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xF2, Name = CommandID.LD  , Function = FunctionID.LD_HIGH, Params = new ParamEntry[] { new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), new ParamEntry(ParameterID.C, ParameterType.HighMemPointer, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 1, }, // F2: LD A, C
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xF8, Name = CommandID.LD  , Function = FunctionID.LD_SP, Params = new ParamEntry[] { new ParamEntry(ParameterID.HL, ParameterType.WordRegister, EncodingType.None, false), new ParamEntry(ParameterID.ImmediateByte, ParameterType.SPPlusOffset, EncodingType.ByteImmidate, false), }, Type = OpcodeType.Official, Cycles = 12, Length = 2, }, // F8nn: LD HL, SP + nn
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xF9, Name = CommandID.LD  , Function = FunctionID.LD, Params = new ParamEntry[] { new ParamEntry(ParameterID.SP, ParameterType.WordRegister, EncodingType.None, false), new ParamEntry(ParameterID.HL, ParameterType.WordRegister, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 1, }, // F9: LD SP, HL
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xFA, Name = CommandID.LD  , Function = FunctionID.LD, Params = new ParamEntry[] { new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), new ParamEntry(ParameterID.ImmediateWord, ParameterType.AddressPointer, EncodingType.WordImmidate, false), }, Type = OpcodeType.Official, Cycles = 16, Length = 3, }, // FAnnnn: LD A, (nnnn)
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x32, Name = CommandID.LDD , Function = FunctionID.LD_DEC, Params = new ParamEntry[] { new ParamEntry(ParameterID.HL, ParameterType.WordRegisterPointer, EncodingType.None, false), new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 1, }, // 32: LDD (HL), A
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x3A, Name = CommandID.LDD , Function = FunctionID.LD_DEC, Params = new ParamEntry[] { new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), new ParamEntry(ParameterID.HL, ParameterType.WordRegisterPointer, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 1, }, // 3A: LDD A, (HL)
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x22, Name = CommandID.LDI , Function = FunctionID.LD_INC, Params = new ParamEntry[] { new ParamEntry(ParameterID.HL, ParameterType.WordRegisterPointer, EncodingType.None, false), new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 1, }, // 22: LDI (HL), A
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x2A, Name = CommandID.LDI , Function = FunctionID.LD_INC, Params = new ParamEntry[] { new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), new ParamEntry(ParameterID.HL, ParameterType.WordRegisterPointer, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 1, }, // 2A: LDI A, (HL)
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x00, Name = CommandID.NOP , Function = FunctionID.NOP, Params = new ParamEntry[] { }, Type = OpcodeType.Official, Cycles = 4, Length = 1, }, // 00: NOP
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xB0, Name = CommandID.OR  , Function = FunctionID.OR, Params = new ParamEntry[] { new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), new ParamEntry(ParameterID.RegisterAny, ParameterType.ByteRegister, EncodingType.Pos1, false), }, Type = OpcodeType.Official, Cycles = 4, Length = 1, }, // B0: OR A, r
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xB6, Name = CommandID.OR  , Function = FunctionID.OR, Params = new ParamEntry[] { new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), new ParamEntry(ParameterID.HL, ParameterType.WordRegisterPointer, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 1, }, // B6: OR A, (HL)
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xF6, Name = CommandID.OR  , Function = FunctionID.OR, Params = new ParamEntry[] { new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), new ParamEntry(ParameterID.ImmediateByte, ParameterType.Value, EncodingType.ByteImmidate, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 2, }, // F6nn: OR A, nn
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xC1, Name = CommandID.POP , Function = FunctionID.POP, Params = new ParamEntry[] { new ParamEntry(ParameterID.RegisterAny, ParameterType.WordRegisterAF, EncodingType.Pos3, false), }, Type = OpcodeType.Official, Cycles = 12, Length = 1, }, // C1: POP rr
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xC5, Name = CommandID.PUSH, Function = FunctionID.PUSH, Params = new ParamEntry[] { new ParamEntry(ParameterID.RegisterAny, ParameterType.WordRegisterAF, EncodingType.Pos3, false), }, Type = OpcodeType.Official, Cycles = 16, Length = 1, }, // C5: PUSH rr
            new OpcodeEntry { Index = false, Prefix = 0xCB, Encoding = 0x80, Name = CommandID.RES , Function = FunctionID.RES, Params = new ParamEntry[] { new ParamEntry(ParameterID.EncodedByte, ParameterType.Value, EncodingType.Pos2, false), new ParamEntry(ParameterID.RegisterAny, ParameterType.ByteRegister, EncodingType.Pos1, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 2, }, // CB80: RES e, r
            new OpcodeEntry { Index = false, Prefix = 0xCB, Encoding = 0x86, Name = CommandID.RES , Function = FunctionID.RES, Params = new ParamEntry[] { new ParamEntry(ParameterID.EncodedByte, ParameterType.Value, EncodingType.Pos2, false), new ParamEntry(ParameterID.HL, ParameterType.WordRegisterPointer, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 16, Length = 2, }, // CB86: RES e, (HL)
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xC0, Name = CommandID.RET , Function = FunctionID.RET, Params = new ParamEntry[] { new ParamEntry(ParameterID.FlagsAny, ParameterType.HalfFlag, EncodingType.Pos2, false), }, Type = OpcodeType.Official, Cycles = 20, Length = 1, }, // C0: RET ff
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xC9, Name = CommandID.RET , Function = FunctionID.RET, Params = new ParamEntry[] { }, Type = OpcodeType.Official, Cycles = 16, Length = 1, }, // C9: RET
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xD9, Name = CommandID.RETI, Function = FunctionID.RETI, Params = new ParamEntry[] { }, Type = OpcodeType.Official, Cycles = 16, Length = 1, }, // D9: RETI
            new OpcodeEntry { Index = false, Prefix = 0xCB, Encoding = 0x10, Name = CommandID.RL  , Function = FunctionID.RL, Params = new ParamEntry[] { new ParamEntry(ParameterID.RegisterAny, ParameterType.ByteRegister, EncodingType.Pos1, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 2, }, // CB10: RL r
            new OpcodeEntry { Index = false, Prefix = 0xCB, Encoding = 0x16, Name = CommandID.RL  , Function = FunctionID.RL, Params = new ParamEntry[] { new ParamEntry(ParameterID.HL, ParameterType.WordRegisterPointer, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 16, Length = 2, }, // CB16: RL (HL)
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x17, Name = CommandID.RLA , Function = FunctionID.RL_A, Params = new ParamEntry[] { }, Type = OpcodeType.Official, Cycles = 4, Length = 1, }, // 17: RLA
            new OpcodeEntry { Index = false, Prefix = 0xCB, Encoding = 0x00, Name = CommandID.RLC , Function = FunctionID.RL_CY, Params = new ParamEntry[] { new ParamEntry(ParameterID.RegisterAny, ParameterType.ByteRegister, EncodingType.Pos1, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 2, }, // CB00: RLC r
            new OpcodeEntry { Index = false, Prefix = 0xCB, Encoding = 0x06, Name = CommandID.RLC , Function = FunctionID.RL_CY, Params = new ParamEntry[] { new ParamEntry(ParameterID.HL, ParameterType.WordRegisterPointer, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 16, Length = 2, }, // CB06: RLC (HL)
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x07, Name = CommandID.RLCA, Function = FunctionID.RL_A_CY, Params = new ParamEntry[] { }, Type = OpcodeType.Official, Cycles = 4, Length = 1, }, // 07: RLCA
            new OpcodeEntry { Index = false, Prefix = 0xCB, Encoding = 0x18, Name = CommandID.RR  , Function = FunctionID.RR, Params = new ParamEntry[] { new ParamEntry(ParameterID.RegisterAny, ParameterType.ByteRegister, EncodingType.Pos1, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 2, }, // CB18: RR r
            new OpcodeEntry { Index = false, Prefix = 0xCB, Encoding = 0x1E, Name = CommandID.RR  , Function = FunctionID.RR, Params = new ParamEntry[] { new ParamEntry(ParameterID.HL, ParameterType.WordRegisterPointer, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 16, Length = 2, }, // CB1E: RR (HL)
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x1F, Name = CommandID.RRA , Function = FunctionID.RR_A, Params = new ParamEntry[] { }, Type = OpcodeType.Official, Cycles = 4, Length = 1, }, // 1F: RRA
            new OpcodeEntry { Index = false, Prefix = 0xCB, Encoding = 0x08, Name = CommandID.RRC , Function = FunctionID.RR_CY, Params = new ParamEntry[] { new ParamEntry(ParameterID.RegisterAny, ParameterType.ByteRegister, EncodingType.Pos1, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 2, }, // CB08: RRC r
            new OpcodeEntry { Index = false, Prefix = 0xCB, Encoding = 0x0E, Name = CommandID.RRC , Function = FunctionID.RR_CY, Params = new ParamEntry[] { new ParamEntry(ParameterID.HL, ParameterType.WordRegisterPointer, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 16, Length = 2, }, // CB0E: RRC (HL)
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x0F, Name = CommandID.RRCA, Function = FunctionID.RR_A_CY, Params = new ParamEntry[] { }, Type = OpcodeType.Official, Cycles = 4, Length = 1, }, // 0F: RRCA
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xC7, Name = CommandID.RST , Function = FunctionID.RST, Params = new ParamEntry[] { new ParamEntry(ParameterID.EncodedByte, ParameterType.Value, EncodingType.Pos2, false), }, Type = OpcodeType.Official, Cycles = 16, Length = 1, }, // C7: RST e
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x98, Name = CommandID.SBC , Function = FunctionID.SUB_C, Params = new ParamEntry[] { new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), new ParamEntry(ParameterID.RegisterAny, ParameterType.ByteRegister, EncodingType.Pos1, false), }, Type = OpcodeType.Official, Cycles = 4, Length = 1, }, // 98: SBC A, r
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x9E, Name = CommandID.SBC , Function = FunctionID.SUB_C, Params = new ParamEntry[] { new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), new ParamEntry(ParameterID.HL, ParameterType.WordRegisterPointer, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 1, }, // 9E: SBC A, (HL)
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xDE, Name = CommandID.SBC , Function = FunctionID.SUB_C, Params = new ParamEntry[] { new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), new ParamEntry(ParameterID.ImmediateByte, ParameterType.Value, EncodingType.ByteImmidate, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 2, }, // DEnn: SBC A, nn
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x37, Name = CommandID.SCF , Function = FunctionID.CY_SET, Params = new ParamEntry[] { }, Type = OpcodeType.Official, Cycles = 4, Length = 1, }, // 37: SCF
            new OpcodeEntry { Index = false, Prefix = 0xCB, Encoding = 0xC0, Name = CommandID.SET , Function = FunctionID.SET, Params = new ParamEntry[] { new ParamEntry(ParameterID.EncodedByte, ParameterType.Value, EncodingType.Pos2, false), new ParamEntry(ParameterID.RegisterAny, ParameterType.ByteRegister, EncodingType.Pos1, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 2, }, // CBC0: SET e, r
            new OpcodeEntry { Index = false, Prefix = 0xCB, Encoding = 0xC6, Name = CommandID.SET , Function = FunctionID.SET, Params = new ParamEntry[] { new ParamEntry(ParameterID.EncodedByte, ParameterType.Value, EncodingType.Pos2, false), new ParamEntry(ParameterID.HL, ParameterType.WordRegisterPointer, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 16, Length = 2, }, // CBC6: SET e, (HL)
            new OpcodeEntry { Index = false, Prefix = 0xCB, Encoding = 0x20, Name = CommandID.SLA , Function = FunctionID.SL_SIGNED, Params = new ParamEntry[] { new ParamEntry(ParameterID.RegisterAny, ParameterType.ByteRegister, EncodingType.Pos1, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 2, }, // CB20: SLA r
            new OpcodeEntry { Index = false, Prefix = 0xCB, Encoding = 0x26, Name = CommandID.SLA , Function = FunctionID.SL_SIGNED, Params = new ParamEntry[] { new ParamEntry(ParameterID.HL, ParameterType.WordRegisterPointer, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 16, Length = 2, }, // CB26: SLA (HL)
            new OpcodeEntry { Index = false, Prefix = 0xCB, Encoding = 0x28, Name = CommandID.SRA , Function = FunctionID.SR_SIGNED, Params = new ParamEntry[] { new ParamEntry(ParameterID.RegisterAny, ParameterType.ByteRegister, EncodingType.Pos1, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 2, }, // CB28: SRA r
            new OpcodeEntry { Index = false, Prefix = 0xCB, Encoding = 0x2E, Name = CommandID.SRA , Function = FunctionID.SR_SIGNED, Params = new ParamEntry[] { new ParamEntry(ParameterID.HL, ParameterType.WordRegisterPointer, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 16, Length = 2, }, // CB2E: SRA (HL)
            new OpcodeEntry { Index = false, Prefix = 0xCB, Encoding = 0x38, Name = CommandID.SRL , Function = FunctionID.SR_L, Params = new ParamEntry[] { new ParamEntry(ParameterID.RegisterAny, ParameterType.ByteRegister, EncodingType.Pos1, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 2, }, // CB38: SRL r
            new OpcodeEntry { Index = false, Prefix = 0xCB, Encoding = 0x3E, Name = CommandID.SRL , Function = FunctionID.SR_L, Params = new ParamEntry[] { new ParamEntry(ParameterID.HL, ParameterType.WordRegisterPointer, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 16, Length = 2, }, // CB3E: SRL (HL)
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x90, Name = CommandID.SUB , Function = FunctionID.SUB, Params = new ParamEntry[] { new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), new ParamEntry(ParameterID.RegisterAny, ParameterType.ByteRegister, EncodingType.Pos1, false), }, Type = OpcodeType.Official, Cycles = 4, Length = 1, }, // 90: SUB A, r
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x96, Name = CommandID.SUB , Function = FunctionID.SUB, Params = new ParamEntry[] { new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), new ParamEntry(ParameterID.HL, ParameterType.WordRegisterPointer, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 1, }, // 96: SUB A, (HL)
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xD6, Name = CommandID.SUB , Function = FunctionID.SUB, Params = new ParamEntry[] { new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), new ParamEntry(ParameterID.ImmediateByte, ParameterType.Value, EncodingType.ByteImmidate, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 2, }, // D6nn: SUB A, nn
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xA8, Name = CommandID.XOR , Function = FunctionID.XOR, Params = new ParamEntry[] { new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), new ParamEntry(ParameterID.RegisterAny, ParameterType.ByteRegister, EncodingType.Pos1, false), }, Type = OpcodeType.Official, Cycles = 4, Length = 1, }, // A8: XOR A, r
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xAE, Name = CommandID.XOR , Function = FunctionID.XOR, Params = new ParamEntry[] { new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), new ParamEntry(ParameterID.HL, ParameterType.WordRegisterPointer, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 1, }, // AE: XOR A, (HL)
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xEE, Name = CommandID.XOR , Function = FunctionID.XOR, Params = new ParamEntry[] { new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), new ParamEntry(ParameterID.ImmediateByte, ParameterType.Value, EncodingType.ByteImmidate, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 2, }, // EEnn: XOR A, nn
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xE0, Name = CommandID.LDH , Function = FunctionID.LD_HIGH, Params = new ParamEntry[] { new ParamEntry(ParameterID.ImmediateByte, ParameterType.HighMemPointer, EncodingType.ByteImmidate, false), new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 12, Length = 2, }, // E0nn: LDH (nn), A
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xF0, Name = CommandID.LDH , Function = FunctionID.LD_HIGH, Params = new ParamEntry[] { new ParamEntry(ParameterID.A, ParameterType.ByteRegister, EncodingType.None, false), new ParamEntry(ParameterID.ImmediateByte, ParameterType.HighMemPointer, EncodingType.ByteImmidate, false), }, Type = OpcodeType.Official, Cycles = 12, Length = 2, }, // F0nn: LDH A, (nn)
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0xF8, Name = CommandID.LDHL, Function = FunctionID.LD_SP, Params = new ParamEntry[] { new ParamEntry(ParameterID.SP, ParameterType.WordRegister, EncodingType.None, false), new ParamEntry(ParameterID.ImmediateByte, ParameterType.Value, EncodingType.ByteImmidate, false), }, Type = OpcodeType.Official, Cycles = 12, Length = 2, }, // F8nn: LDHL SP, nn
            new OpcodeEntry { Index = false, Prefix = 0x00, Encoding = 0x10, Name = CommandID.STOP, Function = FunctionID.STOP, Params = new ParamEntry[] { }, Type = OpcodeType.Official, Cycles = 4, Length = 1, }, // 10: STOP
            new OpcodeEntry { Index = false, Prefix = 0xCB, Encoding = 0x30, Name = CommandID.SWAP, Function = FunctionID.SWAP, Params = new ParamEntry[] { new ParamEntry(ParameterID.RegisterAny, ParameterType.ByteRegister, EncodingType.Pos1, false), }, Type = OpcodeType.Official, Cycles = 8, Length = 2, }, // CB30: SWAP r
            new OpcodeEntry { Index = false, Prefix = 0xCB, Encoding = 0x36, Name = CommandID.SWAP, Function = FunctionID.SWAP, Params = new ParamEntry[] { new ParamEntry(ParameterID.HL, ParameterType.WordRegisterPointer, EncodingType.None, false), }, Type = OpcodeType.Official, Cycles = 16, Length = 2, }, // CB36: SWAP (HL)
        };

        public static CommandList GameBoyCommands = new CommandList()
        {
           { "ADC", CommandID.ADC },
           { "ADD", CommandID.ADD },
           { "AND", CommandID.AND },
           { "BIT", CommandID.BIT },
           { "CALL", CommandID.CALL },
           { "CCF", CommandID.CCF },
           { "CP", CommandID.CP },
           { "CPL", CommandID.CPL },
           { "DAA", CommandID.DAA },
           { "DEC", CommandID.DEC },
           { "DI", CommandID.DI },
           { "EI", CommandID.EI },
           { "HALT", CommandID.HALT },
           { "INC", CommandID.INC },
           { "JP", CommandID.JP },
           { "JR", CommandID.JR },
           { "LD", CommandID.LD },
           { "LDD", CommandID.LDD },
           { "LDI", CommandID.LDI },
           { "NOP", CommandID.NOP },
           { "OR", CommandID.OR },
           { "POP", CommandID.POP },
           { "PUSH", CommandID.PUSH },
           { "RES", CommandID.RES },
           { "RET", CommandID.RET },
           { "RETI", CommandID.RETI },
           { "RL", CommandID.RL },
           { "RLA", CommandID.RLA },
           { "RLC", CommandID.RLC },
           { "RLCA", CommandID.RLCA },
           { "RR", CommandID.RR },
           { "RRA", CommandID.RRA },
           { "RRC", CommandID.RRC },
           { "RRCA", CommandID.RRCA },
           { "RST", CommandID.RST },
           { "SBC", CommandID.SBC },
           { "SCF", CommandID.SCF },
           { "SET", CommandID.SET },
           { "SLA", CommandID.SLA },
           { "SRA", CommandID.SRA },
           { "SRL", CommandID.SRL },
           { "SUB", CommandID.SUB },
           { "XOR", CommandID.XOR },
           { "LDH", CommandID.LDH },
           { "LDHL", CommandID.LDHL },
           { "STOP", CommandID.STOP },
           { "SWAP", CommandID.SWAP },
        };
    }
}
