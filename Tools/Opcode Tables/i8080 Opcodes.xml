<?xml version="1.0" encoding="UTF-8" ?>
<!--

-->

<OpcodeData xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="./Opcodes.xsd">
  <Opcode Value='00' Function='NOP' Group='General' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>NOP</Mnemonic>
      <Status>Documented</Status>
      <Cycles>1(4)</Cycles>
      <Flags>-----</Flags>
      <Description>No operation is performed. The registers and flags are unaffected.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='01' Function='LOAD' Group='16-Bit Load' Length='3'>
    <Encoding Platform='i8080'>
      <Mnemonic>LXI</Mnemonic>
      <Arguments>
        <Arg encoding='WordReg'>WordReg</Arg>
        <Arg encoding='WordImmidate'>Word</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>3(10)</Cycles>
      <Flags>-----</Flags>
      <Description>Byte 3 of the instruction is moved into the high-order register (rh) of the register pair rp. Byte 2 of the instruction is moved into the low-order register (rl) of the register pair rp</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='02' Function='LOAD' Group='8-Bit Load' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>STAX</Mnemonic>
      <Arguments>
        <Arg encoding='WordReg'>WordRegPtr-BD</Arg>
        <Arg encoding='Direct' hidden='true'>ByteReg-A</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>2(7)</Cycles>
      <Flags>-----</Flags>
      <Description>The content of register A is moved to the memory location whose address is in the register pair rp. Note: only register pairs rp=B (registers B and C) or rp=D (registers D and E) may be specified.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='03' Function='INC' Group='16-Bit Arithmetic' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>INX</Mnemonic>
      <Arguments>
        <Arg encoding='WordReg'>WordReg</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>1(5)</Cycles>
      <Flags>-----</Flags>
      <Description>The content of the register pair rp is incremented by one. Note: No condition flags are affected.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='04' Function='INC' Group='8-Bit Arithmetic' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>INR</Mnemonic>
      <Arguments>
        <Arg encoding='Dest'>ByteReg</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>1(5)</Cycles>
      <Flags>SZAP-</Flags>
      <Description>The content of register r is incremented by one. Note: All condition flags except CY are affected.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='05' Function='DEC' Group='8-Bit Arithmetic' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>DCR</Mnemonic>
      <Arguments>
        <Arg encoding='Dest'>ByteReg</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>1(5)</Cycles>
      <Flags>SZAP-</Flags>
      <Description>The content of register r is decremented by one. Note: All condition flag: except CY are affected.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='06' Function='LOAD' Group='8-Bit Load' Length='2'>
    <Encoding Platform='i8080'>
      <Mnemonic>MVI</Mnemonic>
      <Arguments>
        <Arg encoding='Dest'>ByteReg</Arg>
        <Arg encoding='ByteImmidate'>Byte</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>2(7)</Cycles>
      <Flags>-----</Flags>
      <Description>The content of byte 2 of the instruction is moved to register r</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='07' Function='RL' Group='Logical' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>RLC</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>ByteReg-A</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>1(4)</Cycles>
      <Flags>----C</Flags>
      <Description>The content of the accumulator is rotated left one position. The low order bit and the CY flag are both set to the value shifted out of the high order bit position. Only the CY flag is affected</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='08' Function='NOP' Group='General' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>NOP</Mnemonic>
      <Status>ExecuteOnly</Status>
      <Cycles>1(4)</Cycles>
      <Flags>-----</Flags>
      <Description>No operation is performed. The registers and flags are unaffected.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='09' Function='ADD' Group='16-Bit Arithmetic' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>DAD</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>WordReg-HL</Arg>
        <Arg encoding='WordReg'>WordReg</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>3(10)</Cycles>
      <Flags>----C</Flags>
      <Description>The content of the register pair rp is added to the content of the register pair Hand L. The result is placed in the register pair Hand L. Note: Only the CY flag is affected. It is set if there is a carry out of the double precision add; otherwise it is reset.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='0A' Function='LOAD' Group='8-Bit Load' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>LDAX</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>ByteReg-A</Arg>
        <Arg encoding='WordReg'>WordRegPtr-BD</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>2(7)</Cycles>
      <Flags>-----</Flags>
      <Description>The content of the memory location, whose address is in the register pair rp, is moved to register A. Note: only register pairs rp=B (registers B and CÂ·) or rp=D (registers D and E) may be specified.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='0B' Function='DEC' Group='16-Bit Arithmetic' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>DCX</Mnemonic>
      <Arguments>
        <Arg encoding='WordReg'>WordReg</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>1(5)</Cycles>
      <Flags>-----</Flags>
      <Description>The content of the register pair rp is decremented by one. Note: No condition flags are affected.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='0F' Function='RR' Group='Logical' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>RRC</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>ByteReg-A</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>1(4)</Cycles>
      <Flags>----C</Flags>
      <Description>The content of the accumulator is rotated right one position. The high order bit and the CY flag are both set to the value shifted out of the low order bit position. Only the CY flag is affected.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='10' Function='NOP' Group='General' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>NOP</Mnemonic>
      <Status>ExecuteOnly</Status>
      <Cycles>1(4)</Cycles>
      <Flags>-----</Flags>
      <Description>No operation is performed. The registers and flags are unaffected.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='17' Function='RL-CY' Group='Logical' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>RAL</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>ByteReg-A</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>1(4)</Cycles>
      <Flags>----C</Flags>
      <Description>The content of the accumulator is rotated left one position through the CY flag. The low order bit is set equal to the CY flag and the CY flag is set to the value shifted out of the high order bit. Only the CY flag is affected</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='18' Function='NOP' Group='General' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>NOP</Mnemonic>
      <Status>ExecuteOnly</Status>
      <Cycles>1(4)</Cycles>
      <Flags>-----</Flags>
      <Description>No operation is performed. The registers and flags are unaffected.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='1F' Function='RR-CY' Group='Logical' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>RAR</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>ByteReg-A</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>1(4)</Cycles>
      <Flags>----C</Flags>
      <Description>The content of the accumulator is rotated right one position through the CY flag. The high order bit is set to the CY flag and the CY flag is set to the value shifted out of the low order bit. Only the CY flag is affected.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='20' Function='NOP' Group='General' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>NOP</Mnemonic>
      <Status>ExecuteOnly</Status>
      <Cycles>1(4)</Cycles>
      <Flags>-----</Flags>
      <Description>No operation is performed. The registers and flags are unaffected.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='22' Function='LOAD' Group='16-Bit Load' Length='3'>
    <Encoding Platform='i8080'>
      <Mnemonic>SHLD</Mnemonic>
      <Arguments>
        <Arg encoding='WordImmidate'>AddressPtr</Arg>
        <Arg encoding='Direct' hidden='true'>WordReg-HL</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>5(16)</Cycles>
      <Flags>-----</Flags>
      <Description>The content of register L is moved to the memory location whose address is specified in byte 2 and byte 3. The content of register H is moved to the succeeding memory location.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='27' Function='BCD_ADJUST' Group='8-Bit Arithmetic' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>DAA</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>ByteReg-A</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>1(4)</Cycles>
      <Flags>SZAPC</Flags>
      <Description>The eight-bit number in the accumulator is adjusted to form two four-bit Binary-Coded-Decimal digits</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='28' Function='NOP' Group='General' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>NOP</Mnemonic>
      <Status>ExecuteOnly</Status>
      <Cycles>1(4)</Cycles>
      <Flags>-----</Flags>
      <Description>No operation is performed. The registers and flags are unaffected.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='2A' Function='LOAD' Group='16-Bit Load' Length='3'>
    <Encoding Platform='i8080'>
      <Mnemonic>LHLD</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>WordReg-HL</Arg>
        <Arg encoding='WordImmidate'>AddressPtr</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>5(16)</Cycles>
      <Flags>-----</Flags>
      <Description>The content of the memory location, whose address is specified in byte 2 and byte 3 of the instruction, is moved to register L. The content of the memory location at the succeeding address is moved to tion at the succeeding address is moved to register H.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='2F' Function='NOT' Group='Logical' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>CMA</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>ByteReg-A</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>1(4)</Cycles>
      <Flags>-----</Flags>
      <Description>The contents of the accumulator are complemented (zero bits become 1, one bits become 0). No flags are affected.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='30' Function='NOP' Group='General' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>NOP</Mnemonic>
      <Status>ExecuteOnly</Status>
      <Cycles>1(4)</Cycles>
      <Flags>-----</Flags>
      <Description>No operation is performed. The registers and flags are unaffected.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='32' Function='LOAD' Group='8-Bit Load' Length='3'>
    <Encoding Platform='i8080'>
      <Mnemonic>STA</Mnemonic>
      <Arguments>
        <Arg encoding='WordImmidate'>AddressPtr</Arg>
        <Arg encoding='Direct' hidden='true'>ByteReg-A</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>4(13)</Cycles>
      <Flags>-----</Flags>
      <Description>The content of the accumulator is moved to the memory location whose address is specified in byte 2 and byte 3 of the instruction.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='34' Function='INC' Group='8-Bit Arithmetic' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>INR</Mnemonic>
      <Arguments>
        <Arg encoding='Direct'>ByteReg-M</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>3(10)</Cycles>
      <Flags>SZAP-</Flags>
      <Description>The content of the memory location whose address is contained in the Hand L registers is incremented by one. Note: All condition flags except CY are affected.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='35' Function='DEC' Group='8-Bit Arithmetic' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>DCR</Mnemonic>
      <Arguments>
        <Arg encoding='Direct'>ByteReg-M</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>3(10)</Cycles>
      <Flags>SZAP-</Flags>
      <Description>The content of the memory location whose address is contained in the Hand L registers is decremented by one. Note: All condition flags except CY are affected.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='36' Function='LOAD' Group='8-Bit Load' Length='2'>
    <Encoding Platform='i8080'>
      <Mnemonic>MVI</Mnemonic>
      <Arguments>
        <Arg encoding='Direct'>ByteReg-M</Arg>
        <Arg encoding='ByteImmidate'>Byte</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>3(10)</Cycles>
      <Flags>-----</Flags>
      <Description>The content of byte 2 of the instruction is moved to the memory location whose address is in registers H and L.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='37' Function='CY_SET' Group='Logical' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>STC</Mnemonic>
      <Status>Documented</Status>
      <Cycles>1(4)</Cycles>
      <Flags>----C</Flags>
      <Description>The CY flag is set to 1. No other flags are affected.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='38' Function='NOP' Group='General' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>NOP</Mnemonic>
      <Status>ExecuteOnly</Status>
      <Cycles>1(4)</Cycles>
      <Flags>-----</Flags>
      <Description>No operation is performed. The registers and flags are unaffected.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='3A' Function='LOAD' Group='8-Bit Load' Length='3'>
    <Encoding Platform='i8080'>
      <Mnemonic>LDA</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>ByteReg-A</Arg>
        <Arg encoding='WordImmidate'>AddressPtr</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>4(13)</Cycles>
      <Flags>-----</Flags>
      <Description>The content of the memory location, whose address is specified in byte 2 and byte 3 of the instruction, is moved to register A.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='3F' Function='CY_INVERT' Group='Logical' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>CMC</Mnemonic>
      <Status>Documented</Status>
      <Cycles>1(4)</Cycles>
      <Flags>----C</Flags>
      <Description>The CY flag is complemented. No other flags are affected.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='40' Function='LOAD' Group='8-Bit Load' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>MOV</Mnemonic>
      <Arguments>
        <Arg encoding='Dest'>ByteReg</Arg>
        <Arg encoding='Source'>ByteReg</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>1(5)</Cycles>
      <Flags>-----</Flags>
      <Description>The content of register r2 is moved to register r1.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='46' Function='LOAD' Group='8-Bit Load' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>MOV</Mnemonic>
      <Arguments>
        <Arg encoding='Dest'>ByteReg</Arg>
        <Arg encoding='Direct'>ByteReg-M</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>2(7)</Cycles>
      <Flags>-----</Flags>
      <Description>The content of the memory location, whose address is in registers Hand L, is moved to register r</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='70' Function='LOAD' Group='8-Bit Load' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>MOV</Mnemonic>
      <Arguments>
        <Arg encoding='Direct'>ByteReg-M</Arg>
        <Arg encoding='Source'>ByteReg</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>2(7)</Cycles>
      <Flags>-----</Flags>
      <Description>The content of register r is moved to the memory location whose address is in registers H and L.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='76' Function='HALT' Group='General' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>HLT</Mnemonic>
      <Status>Documented</Status>
      <Cycles>1(7)</Cycles>
      <Flags>-----</Flags>
      <Description>The processor is stopped. The registers and flags are unaffected.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='80' Function='ADD' Group='8-Bit Arithmetic' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>ADD</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>ByteReg-A</Arg>
        <Arg encoding='Source'>ByteReg</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>1(4)</Cycles>
      <Flags>SZAPC</Flags>
      <Description>The content of register r is added to the content of the accumulator. The result is placed in the accumulator.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='86' Function='ADD' Group='8-Bit Arithmetic' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>ADD</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>ByteReg-A</Arg>
        <Arg encoding='Direct'>ByteReg-M</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>2(7)</Cycles>
      <Flags>SZAPC</Flags>
      <Description>The content of the memory location whose address is contained in the Hand L registers is added to the content of the accumulator. The result is placed in the accumulator.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='88' Function='ADD-CY' Group='8-Bit Arithmetic' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>ADC</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>ByteReg-A</Arg>
        <Arg encoding='Source'>ByteReg</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>1(4)</Cycles>
      <Flags>SZAPC</Flags>
      <Description>The content of register r and the content of the carry bit are added to the content of the accumulator. The result is placed in the accumulator</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='8E' Function='ADD-CY' Group='8-Bit Arithmetic' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>ADC</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>ByteReg-A</Arg>
        <Arg encoding='Direct'>ByteReg-M</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>2(7)</Cycles>
      <Flags>SZAPC</Flags>
      <Description>The content of the memory location whose address is contained in the Hand L registers and the content of the CY flag are added to the accumulator. The result is placed in the accumulator</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='90' Function='SUB' Group='8-Bit Arithmetic' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>SUB</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>ByteReg-A</Arg>
        <Arg encoding='Source'>ByteReg</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>1(4)</Cycles>
      <Flags>SZAPC</Flags>
      <Description>The content of register r is subtracted from the content of the accumulator. The result is placed in the accumulator.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='96' Function='SUB' Group='8-Bit Arithmetic' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>SUB</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>ByteReg-A</Arg>
        <Arg encoding='Direct'>ByteReg-M</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>2(7)</Cycles>
      <Flags>SZAPC</Flags>
      <Description>The content of the memory location whose address is contained in the Hand L registers is subtracted from the content of the accumulator. The result is placed in the accumulator.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='98' Function='SUB-CY' Group='8-Bit Arithmetic' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>SBB</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>ByteReg-A</Arg>
        <Arg encoding='Source'>ByteReg</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>1(4)</Cycles>
      <Flags>SZAPC</Flags>
      <Description>The content of register r and the content of the CY flag are both subtracted from the accumulator. The result is placed in the accumulator.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='9E' Function='SUB-CY' Group='8-Bit Arithmetic' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>SBB</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>ByteReg-A</Arg>
        <Arg encoding='Direct'>ByteReg-M</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>2(7)</Cycles>
      <Flags>SZAPC</Flags>
      <Description>The content of the memory location whose address is contained in the Hand L registers and the content of the CY flag are both subtracted from the accumulator. The result is placed in the accumulator.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='A0' Function='AND' Group='Logical' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>ANA</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>ByteReg-A</Arg>
        <Arg encoding='Source'>ByteReg</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>1(4)</Cycles>
      <Flags>SZAP0</Flags>
      <Description>The content of register r is logically anded with the content of the accumulator. The result is placed in the accumulator. The CY flag is cleared.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='A6' Function='AND' Group='Logical' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>ANA</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>ByteReg-A</Arg>
        <Arg encoding='Direct'>ByteReg-M</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>2(7)</Cycles>
      <Flags>SZAP0</Flags>
      <Description>The contents of the memory location whose address is contained in the Hand L registers is logically anded with the content of the accumulator. The result is placed in the accumulator. The CY flag is cleared.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='A8' Function='XOR' Group='Logical' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>XRA</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>ByteReg-A</Arg>
        <Arg encoding='Source'>ByteReg</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>1(4)</Cycles>
      <Flags>SZ0P0</Flags>
      <Description>The content of register r is exclusive-or'd with the content of the accumulator. The result is placed in the accumulator. The CY and AC flags are cleared</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='AE' Function='XOR' Group='Logical' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>XRA</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>ByteReg-A</Arg>
        <Arg encoding='Direct'>ByteReg-M</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>2(7)</Cycles>
      <Flags>SZ0P0</Flags>
      <Description>The content of the memory location whose address is contained in the Hand L registers is exclusive-O R'd with the content of the accumulator. The result is placed in the accumulator. The CY and AC flags are cleared.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='B0' Function='OR' Group='Logical' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>ORA</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>ByteReg-A</Arg>
        <Arg encoding='Source'>ByteReg</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>1(4)</Cycles>
      <Flags>SZ0P0</Flags>
      <Description>The content of register r is inclusive-OR'd with the content of the accumulator. The result is placed in the accumulator. The CY and AC flags are cleared</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='B6' Function='OR' Group='Logical' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>ORA</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>ByteReg-A</Arg>
        <Arg encoding='Direct'>ByteReg-M</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>2(7)</Cycles>
      <Flags>SZ0P0</Flags>
      <Description>The content of the memory location whose address is contained in the Hand L registers is inclusive-OR'd with the content of the accumu lator. The result is placed in the accumulator. The CY and AC flags are cleared.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='B8' Function='CMP' Group='Logical' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>CMP</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>ByteReg-A</Arg>
        <Arg encoding='Source'>ByteReg</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>1(4)</Cycles>
      <Flags>SZAPC</Flags>
      <Description>The content of register r is subtracted from the accumulator. The accumulator remains unchanged. The condition flags are set as a result of the subtraction. The Z flag is set to 1 if (A) = (r). The CY flag is set to 1 if (A) &lt; (r) </Description>
    </Encoding>
  </Opcode>
  <Opcode Value='BE' Function='CMP' Group='Logical' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>CMP</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>ByteReg-A</Arg>
        <Arg encoding='Direct'>ByteReg-M</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>2(7)</Cycles>
      <Flags>SZAPC</Flags>
      <Description>The content of the memory location whose address is contained in the Hand L registers is subtracted from the accumulator. The accumulator remains unchanged. The condition flags are set as a result of the subtraction. The Z flag is set to 1 if (A) = ((H) (L)). The CY flag is set to 1 if (A) &lt; ((H) (L)).</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='C0' Function='RET' Group='Branch' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>RNZ</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>Flag-NZ</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>3(11)</Cycles>
      <Flags>-----</Flags>
      <Description>If the specified condition is true, the actions specified in the RET instruction (see above) are performed; otherwise, control continues sequentially</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='C1' Function='POP' Group='Stack' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>POP</Mnemonic>
      <Arguments>
        <Arg encoding='WordReg'>WordReg</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>3(10)</Cycles>
      <Flags>-----</Flags>
      <Description>The content of the memory location, whose address is specified by the content of register SP, is moved to the low-order register of register pair rp. The content of the memory location, whose address is one more than the content of register SP, is moved to the high-order register of register pair rp. The content of register SP is incremented by 2. Note: Register pair rp=SP may not be specified.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='C2' Function='JMP' Group='Branch' Length='3'>
    <Encoding Platform='i8080'>
      <Mnemonic>JNZ</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>Flag-NZ</Arg>
        <Arg encoding='WordImmidate'>Address</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>3(10)</Cycles>
      <Flags>-----</Flags>
      <Description>If the specified condition is true, control is transferred to the instruction whose address is specified in byte 3 and byte 2 of the current instruction; otherwise, control continues sequentially.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='C3' Function='JMP' Group='Branch' Length='3'>
    <Encoding Platform='i8080'>
      <Mnemonic>JMP</Mnemonic>
      <Arguments>
        <Arg encoding='WordImmidate'>Address</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>3(10)</Cycles>
      <Flags>-----</Flags>
      <Description>Control is transferred to the instruction whose address is specified in byte 3 and byte 2 of the current instruction.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='C4' Function='CALL' Group='Branch' Length='3'>
    <Encoding Platform='i8080'>
      <Mnemonic>CNZ</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>Flag-NZ</Arg>
        <Arg encoding='WordImmidate'>Address</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>5(17)</Cycles>
      <Flags>-----</Flags>
      <Description>If the specified condition is true, the actions specified in the CAll instruction (see above) are performed; otherwise, control continues sequentially</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='C5' Function='PUSH' Group='Stack' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>PUSH</Mnemonic>
      <Arguments>
        <Arg encoding='WordReg'>WordReg</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>3(11)</Cycles>
      <Flags>-----</Flags>
      <Description>The content of the high-order register of register pair rp is moved to the memory location whose address is one less than the content of register SP. The content of the low-order register of register pair rp is moved to the memory location whose address is two less than the content of register SP. The cont~nt of register SP is decremented by 2. Note: Register pair rp = SP may not be specified.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='C6' Function='ADD' Group='8-Bit Arithmetic' Length='2'>
    <Encoding Platform='i8080'>
      <Mnemonic>ADI</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>ByteReg-A</Arg>
        <Arg encoding='ByteImmidate'>Byte</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>2(7)</Cycles>
      <Flags>SZAPC</Flags>
      <Description>The content of the second byte of the instruction is added to the content of the accumulator. The result is placed in the accumulator.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='C7' Function='RST' Group='Branch' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>RST</Mnemonic>
      <Arguments>
        <Arg encoding='Dest'>Value</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>3(11)</Cycles>
      <Flags>-----</Flags>
      <Description>The high-order eight bits of the next instruction address are moved to the memory location whose address is one less than the content of register SP. The low-order eight bits of the next instruction address are moved to the memory location whose address is two less than the content of register SP. The content of register SP is decremented by two. Control is transferred to the instruction whose address is eight times the content of NNN.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='C8' Function='RET' Group='Branch' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>RZ</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>Flag-Z</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>3(11)</Cycles>
      <Flags>-----</Flags>
      <Description>If the specified condition is true, the actions specified in the RET instruction (see above) are performed; otherwise, control continues sequentially</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='C9' Function='RET' Group='Branch' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>RET</Mnemonic>
      <Status>Documented</Status>
      <Cycles>3(10)</Cycles>
      <Flags>-----</Flags>
      <Description>The content of the memory location whose address is specified in register SP is moved to the low-order eight bits of register PC. The content of the memory location whose address is one more than the content of register SP is moved to the high-order eight bits of register PC. The content of register SP is incremented by 2.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='CA' Function='JMP' Group='Branch' Length='3'>
    <Encoding Platform='i8080'>
      <Mnemonic>JZ</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>Flag-Z</Arg>
        <Arg encoding='WordImmidate'>Address</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>3(10)</Cycles>
      <Flags>-----</Flags>
      <Description>If the specified condition is true, control is transferred to the instruction whose address is specified in byte 3 and byte 2 of the current instruction; otherwise, control continues sequentially.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='CB' Function='JMP' Group='Branch' Length='3'>
    <Encoding Platform='i8080'>
      <Mnemonic>JMP</Mnemonic>
      <Arguments>
        <Arg encoding='WordImmidate'>Address</Arg>
      </Arguments>
      <Status>ExecuteOnly</Status>
      <Cycles>3(10)</Cycles>
      <Flags>-----</Flags>
      <Description>Control is transferred to the instruction whose address is specified in byte 3 and byte 2 of the current instruction.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='CC' Function='CALL' Group='Branch' Length='3'>
    <Encoding Platform='i8080'>
      <Mnemonic>CZ</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>Flag-Z</Arg>
        <Arg encoding='WordImmidate'>Address</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>5(17)</Cycles>
      <Flags>-----</Flags>
      <Description>If the specified condition is true, the actions specified in the CAll instruction (see above) are performed; otherwise, control continues sequentially</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='CD' Function='CALL' Group='Branch' Length='3'>
    <Encoding Platform='i8080'>
      <Mnemonic>CALL</Mnemonic>
      <Arguments>
        <Arg encoding='WordImmidate'>Address</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>5(17)</Cycles>
      <Flags>-----</Flags>
      <Description>The high-order eight bits of the next instruction address are moved to the memory location whose address is one less than the content of register SP. The low-order eight bits of the next instruction address are moved to the memory location whose address is two less than the content of register SP. The content of register SP is decremented by 2. Control is transferred to the instruction whose address is specified in byte 3 and byte 2 of the current instruction.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='CE' Function='ADD-CY' Group='8-Bit Arithmetic' Length='2'>
    <Encoding Platform='i8080'>
      <Mnemonic>ACI</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>ByteReg-A</Arg>
        <Arg encoding='ByteImmidate'>Byte</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>2(7)</Cycles>
      <Flags>SZAPC</Flags>
      <Description>The content of the second byte of the instruction and the content of the CY flag are added to the contents of the accumulator. The result is placed in the accumulator.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='D0' Function='RET' Group='Branch' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>RNC</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>Flag-NC</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>3(11)</Cycles>
      <Flags>-----</Flags>
      <Description>If the specified condition is true, the actions specified in the RET instruction (see above) are performed; otherwise, control continues sequentially</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='D2' Function='JMP' Group='Branch' Length='3'>
    <Encoding Platform='i8080'>
      <Mnemonic>JNC</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>Flag-NC</Arg>
        <Arg encoding='WordImmidate'>Address</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>3(10)</Cycles>
      <Flags>-----</Flags>
      <Description>If the specified condition is true, control is transferred to the instruction whose address is specified in byte 3 and byte 2 of the current instruction; otherwise, control continues sequentially.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='D3' Function='OUT' Group='I/O' Length='2'>
    <Encoding Platform='i8080'>
      <Mnemonic>OUT</Mnemonic>
      <Arguments>
        <Arg encoding='ByteImmidate'>Byte</Arg>
        <Arg encoding='Direct' hidden='true'>ByteReg-A</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>3(10)</Cycles>
      <Flags>-----</Flags>
      <Description>The content of register A is placed on the eight bit bi-directional data bus for transmission to the specified port.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='D4' Function='CALL' Group='Branch' Length='3'>
    <Encoding Platform='i8080'>
      <Mnemonic>CNC</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>Flag-NC</Arg>
        <Arg encoding='WordImmidate'>Address</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>5(17)</Cycles>
      <Flags>-----</Flags>
      <Description>If the specified condition is true, the actions specified in the CAll instruction (see above) are performed; otherwise, control continues sequentially</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='D6' Function='SUB' Group='8-Bit Arithmetic' Length='2'>
    <Encoding Platform='i8080'>
      <Mnemonic>SUI</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>ByteReg-A</Arg>
        <Arg encoding='ByteImmidate'>Byte</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>2(7)</Cycles>
      <Flags>SZAPC</Flags>
      <Description>The content of the second byte of the instruction is subtracted from the content of the accumulator. The result is placed in the accumulator.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='D8' Function='RET' Group='Branch' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>RC</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>Flag-CY</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>3(11)</Cycles>
      <Flags>-----</Flags>
      <Description>If the specified condition is true, the actions specified in the RET instruction (see above) are performed; otherwise, control continues sequentially</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='D9' Function='RET' Group='Branch' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>RET</Mnemonic>
      <Status>ExecuteOnly</Status>
      <Cycles>3(10)</Cycles>
      <Flags>-----</Flags>
      <Description>The content of the memory location whose address is specified in register SP is moved to the low-order eight bits of register PC. The content of the memory location whose address is one more than the content of register SP is moved to the high-order eight bits of register PC. The content of register SP is incremented by 2.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='DA' Function='JMP' Group='Branch' Length='3'>
    <Encoding Platform='i8080'>
      <Mnemonic>JC</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>Flag-CY</Arg>
        <Arg encoding='WordImmidate'>Address</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>3(10)</Cycles>
      <Flags>-----</Flags>
      <Description>If the specified condition is true, control is transferred to the instruction whose address is specified in byte 3 and byte 2 of the current instruction; otherwise, control continues sequentially.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='DB' Function='IN' Group='I/O' Length='2'>
    <Encoding Platform='i8080'>
      <Mnemonic>IN</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>ByteReg-A</Arg>
        <Arg encoding='ByteImmidate'>Byte</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>3(10)</Cycles>
      <Flags>-----</Flags>
      <Description>The data placed on the eight bit bi-directional data bus by the specified port is moved to register A</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='DC' Function='CALL' Group='Branch' Length='3'>
    <Encoding Platform='i8080'>
      <Mnemonic>CC</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>Flag-CY</Arg>
        <Arg encoding='WordImmidate'>Address</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>5(17)</Cycles>
      <Flags>-----</Flags>
      <Description>If the specified condition is true, the actions specified in the CAll instruction (see above) are performed; otherwise, control continues sequentially</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='DD' Function='CALL' Group='Branch' Length='3'>
    <Encoding Platform='i8080'>
      <Mnemonic>CALL</Mnemonic>
      <Arguments>
        <Arg encoding='WordImmidate'>Address</Arg>
      </Arguments>
      <Status>ExecuteOnly</Status>
      <Cycles>5(17)</Cycles>
      <Flags>-----</Flags>
      <Description>The high-order eight bits of the next instruction address are moved to the memory location whose address is one less than the content of register SP. The low-order eight bits of the next instruction address are moved to the memory location whose address is two less than the content of register SP. The content of register SP is decremented by 2. Control is transferred to the instruction whose address is specified in byte 3 and byte 2 of the current instruction.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='DE' Function='SUB-CY' Group='8-Bit Arithmetic' Length='2'>
    <Encoding Platform='i8080'>
      <Mnemonic>SBI</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>ByteReg-A</Arg>
        <Arg encoding='ByteImmidate'>Byte</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>2(7)</Cycles>
      <Flags>SZAPC</Flags>
      <Description>The contents of the second byte of the instruction and the contents of the CY flag are both subtracted from the accumulator. The result is placed in the accumulator.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='E0' Function='RET' Group='Branch' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>RPO</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>Flag-PO</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>3(11)</Cycles>
      <Flags>-----</Flags>
      <Description>If the specified condition is true, the actions specified in the RET instruction (see above) are performed; otherwise, control continues sequentially</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='E2' Function='JMP' Group='Branch' Length='3'>
    <Encoding Platform='i8080'>
      <Mnemonic>JPO</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>Flag-PO</Arg>
        <Arg encoding='WordImmidate'>Address</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>3(10)</Cycles>
      <Flags>-----</Flags>
      <Description>If the specified condition is true, control is transferred to the instruction whose address is specified in byte 3 and byte 2 of the current instruction; otherwise, control continues sequentially.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='E3' Function='EX' Group='16-Bit Load' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>XTHL</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>WordRegPtr-SP</Arg>
        <Arg encoding='Direct' hidden='true'>WordReg-HL</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>5(18)</Cycles>
      <Flags>-----</Flags>
      <Description>The content of the L register is exchanged with the content of the memory location whose address is specified by the content of register SP. The content of the H register is exchanged with the content of the memory location whose address is one more than the content of register SP.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='E4' Function='CALL' Group='Branch' Length='3'>
    <Encoding Platform='i8080'>
      <Mnemonic>CPO</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>Flag-PO</Arg>
        <Arg encoding='WordImmidate'>Address</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>5(17)</Cycles>
      <Flags>-----</Flags>
      <Description>If the specified condition is true, the actions specified in the CAll instruction (see above) are performed; otherwise, control continues sequentially</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='E6' Function='AND' Group='Logical' Length='2'>
    <Encoding Platform='i8080'>
      <Mnemonic>ANI</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>ByteReg-A</Arg>
        <Arg encoding='ByteImmidate'>Byte</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>2(7)</Cycles>
      <Flags>SZ0P0</Flags>
      <Description>The content of the second byte of the instruction is logicaly anded with the contents of the accumu lator. The result is placed in the accumulator. The CY and AC flags are cleared</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='E8' Function='RET' Group='Branch' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>RPE</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>Flag-PE</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>3(11)</Cycles>
      <Flags>-----</Flags>
      <Description>If the specified condition is true, the actions specified in the RET instruction (see above) are performed; otherwise, control continues sequentially</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='E9' Function='JMP' Group='Logical' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>PCHL</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>WordReg-HL</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>1(5)</Cycles>
      <Flags>-----</Flags>
      <Description>The content of register H is moved to the high-order eight bits of register PC. The content of register l is moved to the low-order eight bits of register PC.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='EA' Function='JMP' Group='Branch' Length='3'>
    <Encoding Platform='i8080'>
      <Mnemonic>JPE</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>Flag-PE</Arg>
        <Arg encoding='WordImmidate'>Address</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>3(10)</Cycles>
      <Flags>-----</Flags>
      <Description>If the specified condition is true, control is transferred to the instruction whose address is specified in byte 3 and byte 2 of the current instruction; otherwise, control continues sequentially.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='EB' Function='EX' Group='16-Bit Load' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>XCHG</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>WordReg-DE</Arg>
        <Arg encoding='Direct' hidden='true'>WordReg-HL</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>1(4)</Cycles>
      <Flags>-----</Flags>
      <Description>The contents of registers Hand L are exchanged with the contents of registers D and E.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='EC' Function='CALL' Group='Branch' Length='3'>
    <Encoding Platform='i8080'>
      <Mnemonic>CPE</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>Flag-PE</Arg>
        <Arg encoding='WordImmidate'>Address</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>5(17)</Cycles>
      <Flags>-----</Flags>
      <Description>If the specified condition is true, the actions specified in the CAll instruction (see above) are performed; otherwise, control continues sequentially</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='ED' Function='CALL' Group='Branch' Length='3'>
    <Encoding Platform='i8080'>
      <Mnemonic>CALL</Mnemonic>
      <Arguments>
        <Arg encoding='WordImmidate'>Address</Arg>
      </Arguments>
      <Status>ExecuteOnly</Status>
      <Cycles>5(17)</Cycles>
      <Flags>-----</Flags>
      <Description>The high-order eight bits of the next instruction address are moved to the memory location whose address is one less than the content of register SP. The low-order eight bits of the next instruction address are moved to the memory location whose address is two less than the content of register SP. The content of register SP is decremented by 2. Control is transferred to the instruction whose address is specified in byte 3 and byte 2 of the current instruction.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='EE' Function='XOR' Group='Logical' Length='2'>
    <Encoding Platform='i8080'>
      <Mnemonic>XRI</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>ByteReg-A</Arg>
        <Arg encoding='ByteImmidate'>Byte</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>2(7)</Cycles>
      <Flags>SZ0P0</Flags>
      <Description>The content of the second byte of the instruction is exclusive-O R'd with the content of the accumu lator. The result is placed in the accumulator. The CY and AC flags are cleared.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='F0' Function='RET' Group='Branch' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>RP</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>Flag-P</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>3(11)</Cycles>
      <Flags>-----</Flags>
      <Description>If the specified condition is true, the actions specified in the RET instruction (see above) are performed; otherwise, control continues sequentially</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='F1' Function='POP' Group='Stack' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>POP</Mnemonic>
      <Arguments>
        <Arg encoding='Direct'>WordReg-PSW</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>3(10)</Cycles>
      <Flags>SZAPC</Flags>
      <Description>The content of the memory location whose address is specified by the content of register SP is used to restore the condition flags. The content of the memory location whose address is one more than the content of register SP is moved to register A. The content of register SP is incremented by 2.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='F2' Function='JMP' Group='Branch' Length='3'>
    <Encoding Platform='i8080'>
      <Mnemonic>JP</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>Flag-P</Arg>
        <Arg encoding='WordImmidate'>Address</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>3(10)</Cycles>
      <Flags>-----</Flags>
      <Description>If the specified condition is true, control is transferred to the instruction whose address is specified in byte 3 and byte 2 of the current instruction; otherwise, control continues sequentially.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='F3' Function='DI' Group='Interrupt' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>DI</Mnemonic>
      <Status>Documented</Status>
      <Cycles>1(4)</Cycles>
      <Flags>-----</Flags>
      <Description>The interrupt system is disabled immediately following the execution of the 01 instruction.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='F4' Function='CALL' Group='Branch' Length='3'>
    <Encoding Platform='i8080'>
      <Mnemonic>CP</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>Flag-P</Arg>
        <Arg encoding='WordImmidate'>Address</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>5(17)</Cycles>
      <Flags>-----</Flags>
      <Description>If the specified condition is true, the actions specified in the CAll instruction (see above) are performed; otherwise, control continues sequentially</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='F5' Function='PUSH' Group='Stack' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>PUSH</Mnemonic>
      <Arguments>
        <Arg encoding='Direct'>WordReg-PSW</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>3(11)</Cycles>
      <Flags>-----</Flags>
      <Description>The content of register A is moved to the memory location whose address is one less than register SP. The contents of the condition flags are assembled into a processor status word and the word is moved to the memory location whose address is two less than the content of register SP. The content of register SP is decremented by two.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='F6' Function='OR' Group='Logical' Length='2'>
    <Encoding Platform='i8080'>
      <Mnemonic>ORI</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>ByteReg-A</Arg>
        <Arg encoding='ByteImmidate'>Byte</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>2(7)</Cycles>
      <Flags>SZ0P0</Flags>
      <Description>The content of the second byte of the instruction is inclusive-OR'd with the content of the accumulator. The result is placed in the accumulator. The CY and AC flags are cleared.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='F8' Function='RET' Group='Branch' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>RM</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>Flag-M</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>3(11)</Cycles>
      <Flags>-----</Flags>
      <Description>If the specified condition is true, the actions specified in the RET instruction (see above) are performed; otherwise, control continues sequentially</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='F9' Function='LOAD' Group='16-Bit Load' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>SPHL</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>WordReg-SP</Arg>
        <Arg encoding='Direct' hidden='true'>WordReg-HL</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>1(5)</Cycles>
      <Flags>-----</Flags>
      <Description>The contents of registers Hand L (16 bits) are moved to register SP.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='FA' Function='JMP' Group='Branch' Length='3'>
    <Encoding Platform='i8080'>
      <Mnemonic>JM</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>Flag-M</Arg>
        <Arg encoding='WordImmidate'>Address</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>3(10)</Cycles>
      <Flags>-----</Flags>
      <Description>If the specified condition is true, control is transferred to the instruction whose address is specified in byte 3 and byte 2 of the current instruction; otherwise, control continues sequentially.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='FB' Function='EI' Group='Interrupt' Length='1'>
    <Encoding Platform='i8080'>
      <Mnemonic>EI</Mnemonic>
      <Status>Documented</Status>
      <Cycles>1(4)</Cycles>
      <Flags>-----</Flags>
      <Description>The interrupt system is enabled following the execution of the next instruction.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='FC' Function='CALL' Group='Branch' Length='3'>
    <Encoding Platform='i8080'>
      <Mnemonic>CM</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>Flag-M</Arg>
        <Arg encoding='WordImmidate'>Address</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>5(17)</Cycles>
      <Flags>-----</Flags>
      <Description>If the specified condition is true, the actions specified in the CAll instruction (see above) are performed; otherwise, control continues sequentially</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='FD' Function='CALL' Group='Branch' Length='3'>
    <Encoding Platform='i8080'>
      <Mnemonic>CALL</Mnemonic>
      <Arguments>
        <Arg encoding='WordImmidate'>Address</Arg>
      </Arguments>
      <Status>ExecuteOnly</Status>
      <Cycles>5(17)</Cycles>
      <Flags>-----</Flags>
      <Description>The high-order eight bits of the next instruction address are moved to the memory location whose address is one less than the content of register SP. The low-order eight bits of the next instruction address are moved to the memory location whose address is two less than the content of register SP. The content of register SP is decremented by 2. Control is transferred to the instruction whose address is specified in byte 3 and byte 2 of the current instruction.</Description>
    </Encoding>
  </Opcode>
  <Opcode Value='FE' Function='CMP' Group='Logical' Length='2'>
    <Encoding Platform='i8080'>
      <Mnemonic>CPI</Mnemonic>
      <Arguments>
        <Arg encoding='Direct' hidden='true'>ByteReg-A</Arg>
        <Arg encoding='ByteImmidate'>Byte</Arg>
      </Arguments>
      <Status>Documented</Status>
      <Cycles>2(7)</Cycles>
      <Flags>SZAPC</Flags>
      <Description>The content of the second byte of the instruction is subtracted from the accumulator. The condition flags are set by the result of the subtraction. The Z flag is set to 1 if (A) = (byte 2). The CY flag is set to 1 if (A) &lt; (byte 2).</Description>
    </Encoding>
  </Opcode>
</OpcodeData>
