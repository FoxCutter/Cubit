//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by xsd, Version=4.6.1055.0.
// 
namespace Opcodes {
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class OpcodeData {
        
        private opcodeType[] opcodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Opcode", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public opcodeType[] Opcode {
            get {
                return this.opcodeField;
            }
            set {
                this.opcodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class opcodeType {
        
        private opcodeEncoding[] encodingField;
        
        private bool indexField;
        
        private byte[] prefixField;
        
        private byte[] valueField;
        
        private string functionField;
        
        private string groupField;
        
        private short lengthField;
        
        public opcodeType() {
            this.indexField = false;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Encoding", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public opcodeEncoding[] Encoding {
            get {
                return this.encodingField;
            }
            set {
                this.encodingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool Index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        // CODEGEN Warning: DefaultValue attribute on members of type System.Byte[] is not supported in this version of the .Net Framework.
        // CODEGEN Warning: 'default' attribute on items of type 'hexBinary' is not supported in this version of the .Net Framework.  Ignoring default='00' attribute.
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="hexBinary")]
        public byte[] Prefix {
            get {
                return this.prefixField;
            }
            set {
                this.prefixField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="hexBinary")]
        public byte[] Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Function {
            get {
                return this.functionField;
            }
            set {
                this.functionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public short Length {
            get {
                return this.lengthField;
            }
            set {
                this.lengthField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class opcodeEncoding {
        
        private string mnemonicField;
        
        private argType[] argumentsField;
        
        private statusEnum statusField;
        
        private string cyclesField;
        
        private string flagsField;
        
        private string descriptionField;
        
        private bool preferredField;
        
        private string platformField;
        
        public opcodeEncoding() {
            this.statusField = statusEnum.Documented;
            this.preferredField = true;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Mnemonic {
            get {
                return this.mnemonicField;
            }
            set {
                this.mnemonicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Arg", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public argType[] Arguments {
            get {
                return this.argumentsField;
            }
            set {
                this.argumentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(statusEnum.Documented)]
        public statusEnum Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Cycles {
            get {
                return this.cyclesField;
            }
            set {
                this.cyclesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Flags {
            get {
                return this.flagsField;
            }
            set {
                this.flagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool Preferred {
            get {
                return this.preferredField;
            }
            set {
                this.preferredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Platform {
            get {
                return this.platformField;
            }
            set {
                this.platformField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class argType {
        
        private encodingEnum encodingField;
        
        private bool hiddenField;
        
        private argTypeEnum valueField;
        
        public argType() {
            this.encodingField = encodingEnum.Direct;
            this.hiddenField = false;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(encodingEnum.Direct)]
        public encodingEnum encoding {
            get {
                return this.encodingField;
            }
            set {
                this.encodingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool hidden {
            get {
                return this.hiddenField;
            }
            set {
                this.hiddenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public argTypeEnum Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    public enum encodingEnum {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Source,
        
        /// <remarks/>
        Dest,
        
        /// <remarks/>
        Flag,
        
        /// <remarks/>
        WordReg,
        
        /// <remarks/>
        HalfFlag,
        
        /// <remarks/>
        ByteImmidate,
        
        /// <remarks/>
        WordImmidate,
        
        /// <remarks/>
        IndexOffset,
        
        /// <remarks/>
        Direct,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    public enum argTypeEnum {
        
        /// <remarks/>
        ByteReg,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ByteReg-B")]
        ByteRegB,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ByteReg-C")]
        ByteRegC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ByteReg-D")]
        ByteRegD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ByteReg-E")]
        ByteRegE,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ByteReg-H")]
        ByteRegH,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ByteReg-L")]
        ByteRegL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ByteReg-M")]
        ByteRegM,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ByteReg-A")]
        ByteRegA,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ByteReg-I")]
        ByteRegI,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ByteReg-R")]
        ByteRegR,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ByteRegPtr-C")]
        ByteRegPtrC,
        
        /// <remarks/>
        WordReg,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("WordReg-BC")]
        WordRegBC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("WordReg-DE")]
        WordRegDE,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("WordReg-HL")]
        WordRegHL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("WordReg-SP")]
        WordRegSP,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("WordReg-PSW")]
        WordRegPSW,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("WordReg-AF")]
        WordRegAF,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("WordReg-AFAlt")]
        WordRegAFAlt,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("WordReg-BD")]
        WordRegBD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("WordReg-SP+Byte")]
        WordRegSPByte,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("WordRegPtr-BC")]
        WordRegPtrBC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("WordRegPtr-DE")]
        WordRegPtrDE,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("WordRegPtr-HL")]
        WordRegPtrHL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("WordRegPtr-SP")]
        WordRegPtrSP,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("WordRegPtr-BD")]
        WordRegPtrBD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("WordRegPtr-HLI")]
        WordRegPtrHLI,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("WordRegPtr-HLD")]
        WordRegPtrHLD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ByteReg-Izb")]
        ByteRegIzb,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("WordReg-Iz")]
        WordRegIz,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("WordRegPtr-Iz")]
        WordRegPtrIz,
        
        /// <remarks/>
        RstValue,
        
        /// <remarks/>
        Value,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Value-0")]
        Value0,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Value-1")]
        Value1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Value-2")]
        Value2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Value-8")]
        Value8,
        
        /// <remarks/>
        Byte,
        
        /// <remarks/>
        Word,
        
        /// <remarks/>
        Address,
        
        /// <remarks/>
        Displacment,
        
        /// <remarks/>
        BytePtr,
        
        /// <remarks/>
        AddressPtr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("HighMemPtr+Byte")]
        HighMemPtrByte,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("HighMemPtr+C")]
        HighMemPtrC,
        
        /// <remarks/>
        Flag,
        
        /// <remarks/>
        HalfFlag,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Flag-NZ")]
        FlagNZ,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Flag-Z")]
        FlagZ,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Flag-NC")]
        FlagNC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Flag-CY")]
        FlagCY,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Flag-PO")]
        FlagPO,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Flag-PE")]
        FlagPE,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Flag-P")]
        FlagP,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Flag-M")]
        FlagM,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Flag-NK")]
        FlagNK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Flag-K")]
        FlagK,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    public enum statusEnum {
        
        /// <remarks/>
        Documented,
        
        /// <remarks/>
        Undocumented,
        
        /// <remarks/>
        ExecuteOnly,
    }
}
